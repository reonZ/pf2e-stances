{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///../../../../foundryVTT-projects/@utils/module.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/path.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/flags.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/localize.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/notification.ts","webpack:///./src/stances.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/settings.ts","webpack:///./src/savant.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/item.ts","webpack:///./src/sheet.ts","webpack:///./src/main.ts","webpack:///../../../../foundryVTT-projects/@utils/foundry/module.ts"],"sourcesContent":["export let MODULE_ID = ''\r\nexport let TYPE = 'module'\r\n\r\nexport function setModuleID(id: string, isSystem = false) {\r\n    if (!MODULE_ID) MODULE_ID = id\r\n    TYPE = isSystem ? 'system' : 'module'\r\n}\r\n","import { MODULE_ID, TYPE } from '@utils/module'\r\n\r\nexport function getSettingLocalizationPath(...path: string[]) {\r\n    return `${MODULE_ID}.settings.${path.join('.')}`\r\n}\r\n\r\nexport function flagsUpdatePath(...path: string[]) {\r\n    return `flags.${MODULE_ID}.${path.join('/')}`\r\n}\r\n\r\nexport function templatePath(...path: string[]) {\r\n    path = path.filter(x => typeof x === 'string')\r\n    return `${TYPE}s/${MODULE_ID}/templates/${path.join('/')}`\r\n}\r\n\r\nexport function imagePath(...path: string[]) {\r\n    return `${TYPE}s/${MODULE_ID}/images/${path.join('/')}`\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\nexport function hasModuleFlag(doc: FoundryDocument) {\r\n    return getProperty(doc, `flags.${MODULE_ID}`) !== undefined\r\n}\r\n\r\nexport function flagPath(key: string) {\r\n    return `flags.${MODULE_ID}.key`\r\n}\r\n\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string): T | undefined\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string, fallback: T): T\r\nexport function getFlag<T extends unknown>(doc: FoundryDocument, key: string, fallback?: T): T | undefined {\r\n    return (doc.getFlag(MODULE_ID, key) as T | undefined) ?? fallback\r\n}\r\n\r\n/**\r\n * @template {foundry.Document} T\r\n * @param {T} doc\r\n * @param {string} key\r\n * @param {any} value\r\n * @returns T\r\n */\r\nexport function setFlag(doc: FoundryDocument, key: string, value: unknown) {\r\n    return doc.setFlag(MODULE_ID, key, value)\r\n}\r\n\r\nexport function getSourceId(doc: ClientDocumentMixin) {\r\n    return doc.getFlag<ItemUUID>('core', 'sourceId')\r\n}\r\n\r\nexport function hasSourceId(doc: ClientDocumentMixin, sourceId: DocumentUUID) {\r\n    return getSourceId(doc) === sourceId\r\n}\r\n\r\nexport function includesSourceId(doc: ClientDocumentMixin, list: DocumentUUID[]) {\r\n    const sourceId = getSourceId(doc)\r\n    return sourceId ? list.includes(sourceId) : false\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { warn, NotifyArgs, info, error } from '@utils/foundry/notification'\r\n\r\nexport type LocalizeArgs = [key: string, data?: Record<string, string | number | boolean>]\r\n\r\nexport function localize(...args: LocalizeArgs) {\r\n    let [key, data] = args\r\n    key = `${MODULE_ID}.${key}`\r\n    if (data) return game.i18n.format(key, data)\r\n    return game.i18n.localize(key)\r\n}\r\n\r\nexport function hasLocalization(key: string) {\r\n    return game.i18n.has(`${MODULE_ID}.${key}`, false)\r\n}\r\n\r\nexport function localizePath(key: string) {\r\n    return `${MODULE_ID}.${key}`\r\n}\r\n\r\nexport function localizeTemplate(key: string, { hash }: { hash: Record<string, string> }) {\r\n    return localize(`${key}`, hash)\r\n}\r\n\r\nexport function subLocalize(subKey: string) {\r\n    const fn = (...args: LocalizeArgs) => localize(`${subKey}.${args[0]}`, args[1])\r\n\r\n    Object.defineProperties(fn, {\r\n        warn: {\r\n            value: (...args: NotifyArgs) => warn(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        info: {\r\n            value: (...args: NotifyArgs) => info(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        error: {\r\n            value: (...args: NotifyArgs) => error(`${subKey}.${args[0]}`, args[1], args[2]),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        has: {\r\n            value: (key: string) => hasLocalization(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        path: {\r\n            value: (key: string) => localizePath(`${subKey}.${key}`),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n        template: {\r\n            value: (key: string, { hash }: { hash: Record<string, string> }) => fn(key, hash),\r\n            enumerable: false,\r\n            configurable: false,\r\n        },\r\n    })\r\n\r\n    return fn as ((...args: LocalizeArgs) => string) & {\r\n        warn: (...args: NotifyArgs) => void\r\n        info: (...args: NotifyArgs) => void\r\n        error: (...args: NotifyArgs) => void\r\n        has: (key: string) => boolean\r\n        path: (key: string) => string\r\n        template: (key: string, options: { hash: Record<string, string> }) => string\r\n    }\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\n\r\nexport type NotifyArgs = [str: string, arg1?: boolean | Record<string, string | number | boolean>, arg2?: boolean]\r\n\r\nfunction notify(\r\n    str: string,\r\n    arg1?: 'warning' | 'info' | 'error' | boolean | Record<string, string | number | boolean>,\r\n    arg2?: boolean | Record<string, string | number | boolean>,\r\n    arg3?: boolean\r\n) {\r\n    const type = typeof arg1 === 'string' ? arg1 : 'info'\r\n    const data = typeof arg1 === 'object' ? arg1 : typeof arg2 === 'object' ? arg2 : undefined\r\n    const permanent = typeof arg1 === 'boolean' ? arg1 : typeof arg2 === 'boolean' ? arg2 : arg3 ?? false\r\n\r\n    ui.notifications.notify(localize(str, data), type, { permanent })\r\n}\r\n\r\nexport function warn(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'warning', arg1, arg2)\r\n}\r\n\r\nexport function info(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'info', arg1, arg2)\r\n}\r\n\r\nexport function error(...args: NotifyArgs) {\r\n    const [str, arg1, arg2] = args\r\n    notify(str, 'error', arg1, arg2)\r\n}\r\n","import { getSourceId } from '@utils/foundry/flags'\r\nimport { getSetting } from '@utils/foundry/settings'\r\nimport { error } from '../../../../../foundryVTT-projects/@utils/foundry/notification'\r\n\r\nconst STANCES: StanceData[] = [\r\n    {\r\n        // Arcane Cascade\r\n        feat: 'Compendium.pf2e.classfeatures.Item.09iL38CZZEa0q0Mt',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.fsjO5oTKttsbpaKl',\r\n        action: 'Compendium.pf2e.actionspf2e.Item.HbejhIywqIufrmVM',\r\n    },\r\n    {\r\n        // Buckler Dance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.tDWc2LQNl0Op1Auq',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.PS17dsXkTdQmOv7w',\r\n    },\r\n    {\r\n        // Bullet Dancer Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.j1hhTLOq7o80XCyV',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.6ctQFQfSZ6o1uyyZ',\r\n        action: 'Compendium.pf2e.actionspf2e.Item.SMF1hTWPHtmlS8Cd',\r\n    },\r\n    {\r\n        // Cobra Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.AkV4Jyllo6nlK2Sl',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.CgxYa0lrLUjS2ZhI',\r\n    },\r\n    {\r\n        // Cobra Stance (Envenom)\r\n        feat: 'Compendium.pf2e.feats-srd.Item.xQuNswWB3eg1UM28',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.2Qpt0CHuOMeL48rN',\r\n        replace: 'Compendium.pf2e.feats-srd.Item.AkV4Jyllo6nlK2Sl', // Cobra Stance\r\n    },\r\n    {\r\n        // Crane Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.bf7NCeKqDClaqhTR',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.nwkYZs6YwXYAJ4ps',\r\n    },\r\n    {\r\n        // Disarm Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.1p5ErCp33nGOzEsk',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.LxSev4GNKv26DbZw',\r\n    },\r\n    {\r\n        // Disruptive Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.OEGhbRgW6wRbccns',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.qBR3kqGCeKp3T2Be',\r\n    },\r\n    {\r\n        // Dragon Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.8sy3sHwOHS4ImwvJ',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.qUowHpn79Dpt1hVn',\r\n    },\r\n    {\r\n        // Dread Marshal Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.R7c4PyTNkZb0yvoT',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.qX62wJzDYtNxDbFv',\r\n    },\r\n    {\r\n        // Dueling Dance (Fighter)\r\n        feat: 'Compendium.pf2e.feats-srd.Item.FYz5eQeTox9IDkSd',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.KiuBRoMFxL2Npt51',\r\n    },\r\n    {\r\n        // Dueling Dance (Swashbuckler)\r\n        feat: 'Compendium.pf2e.feats-srd.Item.9VGmE7X4aK2W8YWj',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.KiuBRoMFxL2Npt51',\r\n    },\r\n    {\r\n        // Everstand Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.6GN1zh3RcnZhrzxP',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.GGebXpRPyONZB3eS',\r\n    },\r\n    {\r\n        // Fane's Fourberie\r\n        feat: 'Compendium.pf2e.feats-srd.Item.80CEAB05TP5ki9iW',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.GvqB4M8LrHpzYEvl',\r\n    },\r\n    {\r\n        // Gorilla Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.DqD7htz8Sd1dh3BT',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.RozqjLocahvQWERr',\r\n    },\r\n    {\r\n        // Gorilla Stance (Pound)\r\n        feat: 'Compendium.pf2e.feats-srd.Item.nRjyyDulHnP5OewA',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.UZKIKLuwpQu47feK',\r\n        replace: 'Compendium.pf2e.feats-srd.Item.DqD7htz8Sd1dh3BT',\r\n    },\r\n    {\r\n        // Graceful Poise\r\n        feat: 'Compendium.pf2e.feats-srd.Item.rFaUJtB46scuAidY',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.mark4VEQoynfYNBF',\r\n    },\r\n    {\r\n        // Impassable Wall Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.YeyOqNFKaeuOTiJr',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.zzC2qZwEKf4Ja3xD',\r\n    },\r\n    {\r\n        // Inspiring Marshal Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.bvOsJNeI0ewvQsFa',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.er5tvDNvpbcnlbHQ',\r\n    },\r\n    {\r\n        // Ironblood Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.x9cYkB8DrUBBwqJd',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.tPKXLtDJ3bzJcXlv',\r\n    },\r\n    {\r\n        // Jellyfish Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.Jwq5o13uZF3ooln1',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.pkcr9w5x6bKzl3om',\r\n    },\r\n    {\r\n        // Lunging Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.ZghzLmYgeE19GqjP',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.W8CKuADdbODpBh6O',\r\n    },\r\n    {\r\n        // Masquerade of Seasons Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.KMVXUgFArcftg1jQ',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.6IsZQpwRJQWIzdGx',\r\n    },\r\n    {\r\n        // Mobile Shot Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.rByA8NDI6ZtNgBeT',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.NWOmJ6WJFheaGhho',\r\n    },\r\n    {\r\n        // Monastic Archer Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.YG2RxXE9SMfwo6wP',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.1dxD3xsTzak6GNj5',\r\n    },\r\n    {\r\n        // Mountain Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.ZL5UU9quCTvcWzfY',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.gYpy9XBPScIlY93p',\r\n    },\r\n    {\r\n        // Multishot Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.RzhnxgiAopWILCvs',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.l4QUaedYofnfXig0',\r\n    },\r\n    {\r\n        // Paragon's Guard\r\n        feat: 'Compendium.pf2e.feats-srd.Item.hPDerDCYmag3s0dP',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.6EDoy3OSFZ4L3Vs7',\r\n    },\r\n    {\r\n        // Peafowl Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.C3MgEkPNaIhTddbr',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.vjvcccAwdkOLA1Fc',\r\n    },\r\n    {\r\n        // Point-Blank Shot\r\n        feat: 'Compendium.pf2e.feats-srd.Item.Yl2wYv24v5kw95aS',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.9HPxAKpP3WJmICBx',\r\n    },\r\n    {\r\n        // Powder Punch Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.Ziky4XVV7syXVbUg',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.kDTiRg9vVOYNnTyr',\r\n    },\r\n    {\r\n        // Push Back the Dead!\r\n        feat: 'Compendium.pf2e.feats-srd.Item.BtZJJClWCpc31Ven',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.OeZ0E1oUKyGPxPy0',\r\n    },\r\n    {\r\n        // Rain of Embers Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.rbiMK71SvGZGRLJ1',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.Im5JBInybWFbHEYS',\r\n    },\r\n    {\r\n        // Reflective Ripple Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.knZUN4sYExIyRC4F',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.QDQwHxNowRwzUx9R',\r\n    },\r\n    {\r\n        // Ricochet Stance (Fighter)\r\n        feat: 'Compendium.pf2e.feats-srd.Item.tRHjUCl0xqG97nok',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.Unfl4QQURWaX2zfd',\r\n    },\r\n    {\r\n        // Ricochet Stance (Rogue)\r\n        feat: 'Compendium.pf2e.feats-srd.Item.RsNvCSrCN7czHC0G',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.Unfl4QQURWaX2zfd',\r\n    },\r\n    {\r\n        // Rough Terrain Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.O0POcPD2aELYTcIK',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.YkiTA74FrUUu5IvI',\r\n    },\r\n    {\r\n        // Shooting Stars Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.6cQSPqXoAO6oJl0i',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.RXbfq6oqzVnW6xOV',\r\n    },\r\n    {\r\n        // Six Pillars Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.hT0pVPqFuiEsmRb8',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.P80mwvCAEncR2snK',\r\n    },\r\n    {\r\n        // Sky and Heaven Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.UjEeHamC2C8JfgJz',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.CQfkyJkRHw4IHWhv',\r\n    },\r\n    {\r\n        // Stoked Flame Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.GuEdTz1VMEptQnOd',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.rp1YauUSULuqW8rs',\r\n    },\r\n    {\r\n        // Stumbling Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.7FRYyKXDKjGoANYj',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.BCyGDKcplkJiSAKJ',\r\n    },\r\n    {\r\n        // Tangled Forest Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.2tUdsoPEnW9yS8so',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.PMHwCrnh9W4sMu5b',\r\n    },\r\n    {\r\n        // Tiger Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.VCjAlOvjNvFJOsG5',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.pf9yvKNg6jZLrE30',\r\n    },\r\n    {\r\n        // Twinned Defense (Fighter)\r\n        feat: 'Compendium.pf2e.feats-srd.Item.xjLbabfyQzBNT4y1',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.3eHMqVx30JGiJqtM',\r\n    },\r\n    {\r\n        // Twinned Defense (Swashbuckler)\r\n        feat: 'Compendium.pf2e.feats-srd.Item.kTRGAST9J9ZxJZ4A',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.3eHMqVx30JGiJqtM',\r\n    },\r\n    {\r\n        // Vitality-Manipulating Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.Tj79ePSD212EZjRM',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.h45sUZFs5jhuQdCE',\r\n    },\r\n    {\r\n        // Whirling Blade Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.IaiEZaA8erufMUCr',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.JefXqvhzUeBArkAP',\r\n    },\r\n    {\r\n        //  Whirlwind Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.wZZyasfIqwiJBQAQ',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.q6UokHWSEcEYWmvh',\r\n    },\r\n    {\r\n        // Wolf Stance\r\n        feat: 'Compendium.pf2e.feats-srd.Item.AN9jY1JVcU20Qdw6',\r\n        effect: 'Compendium.pf2e.feat-effects.Item.b2kWJuCPj1rDMdwz',\r\n    },\r\n]\r\n\r\nconst FEATS: Map<ItemUUID, StanceData> = new Map()\r\nconst EFFECTS: Set<ItemUUID> = new Set()\r\nconst ACTIONS: Set<ItemUUID> = new Set()\r\n\r\nexport function getActionsUUIDS() {\r\n    return new Set(ACTIONS)\r\n}\r\n\r\nexport function parseCustomStances() {\r\n    FEATS.clear()\r\n    EFFECTS.clear()\r\n    ACTIONS.clear()\r\n\r\n    for (const stance of STANCES) {\r\n        FEATS.set(stance.feat, stance)\r\n        EFFECTS.add(stance.effect)\r\n        ACTIONS.add(stance.action ?? stance.feat)\r\n    }\r\n\r\n    try {\r\n        const setting = getSetting<string>('custom').trim()\r\n        if (!setting) return\r\n\r\n        const customs = JSON.parse(setting)\r\n\r\n        for (const stance of customs) {\r\n            if (typeof stance !== 'object' || Array.isArray(stance)) continue\r\n            if (typeof stance.feat !== 'string' || stance.feat.length < 21) continue\r\n            if (typeof stance.effect !== 'string' || stance.feat.length < 21) continue\r\n            if (FEATS.has(stance.feat) || EFFECTS.has(stance.effect)) continue\r\n\r\n            FEATS.set(stance.feat, stance)\r\n            EFFECTS.add(stance.effect)\r\n        }\r\n    } catch (err) {\r\n        error('settings.custom.error')\r\n        console.error(err)\r\n    }\r\n}\r\n\r\nexport function getStances(actor: CharacterPF2e) {\r\n    const stances: StanceData[] = []\r\n    const replaced: ItemUUID[] = []\r\n    const effects: Map<ItemUUID, string> = new Map()\r\n    const actions: Map<ItemUUID, string> = new Map()\r\n\r\n    for (const action of actor.itemTypes.action) {\r\n        const sourceId = action.sourceId\r\n        if (!sourceId || !ACTIONS.has(sourceId)) continue\r\n        actions.set(sourceId, action.id)\r\n    }\r\n\r\n    for (const feat of actor.itemTypes.feat) {\r\n        const sourceId = feat.sourceId\r\n        const stance = sourceId && FEATS.get(sourceId)\r\n        if (!stance) continue\r\n\r\n        stances.push(stance)\r\n        if (stance.replace) replaced.push(stance.replace)\r\n        if (!actions.has(sourceId)) actions.set(sourceId, feat.id)\r\n    }\r\n\r\n    for (const effect of actor.itemTypes.effect) {\r\n        const sourceId = getSourceId(effect)\r\n        if (!sourceId || !EFFECTS.has(sourceId)) continue\r\n        effects.set(sourceId, effect.id)\r\n    }\r\n\r\n    const filtered = stances.filter(stance => !replaced.includes(stance.feat))\r\n\r\n    return filtered\r\n        .map(stance => {\r\n            const feat = fromUuidSync<CompendiumIndexData>(stance.feat)\r\n            const effect = fromUuidSync<CompendiumIndexData>(stance.effect)\r\n            const replace = stance.replace && fromUuidSync<CompendiumIndexData>(stance.replace)\r\n            if (!feat || !effect) return\r\n\r\n            const actionUUID = stance.action ?? stance.feat\r\n\r\n            const returned: ReturnedStance = {\r\n                name: replace ? replace.name : feat.name,\r\n                img: effect.img,\r\n                actionID: actions.get(actionUUID)!,\r\n                effectID: effects.get(stance.effect) ?? '',\r\n                actionUUID,\r\n                effectUUID: stance.effect,\r\n            }\r\n\r\n            return returned\r\n        })\r\n        .filter(stance => stance) as ReturnedStance[]\r\n}\r\n\r\nexport function getEffects(actor: CharacterPF2e) {\r\n    const effects = []\r\n\r\n    for (const effect of actor.itemTypes.effect) {\r\n        const sourceId = getSourceId(effect)\r\n        if (!sourceId || !EFFECTS.has(sourceId)) continue\r\n        effects.push({ uuid: sourceId, id: effect.id })\r\n    }\r\n\r\n    return effects\r\n}\r\n\r\nexport async function addStance(actor: CharacterPF2e, uuid: ItemUUID) {\r\n    const effect = await fromUuid<EffectPF2e>(uuid)\r\n\r\n    if (effect) {\r\n        const obj = effect.toObject()\r\n        if (!getProperty(obj, 'flags.core.sourceId')) setProperty(obj, 'flags.core.sourceId', effect.uuid)\r\n\r\n        const items = (await actor.createEmbeddedDocuments('Item', [obj])) as EffectPF2e[]\r\n        items[0]?.toMessage()\r\n\r\n        return true\r\n    }\r\n\r\n    return false\r\n}\r\n\r\nexport async function toggleStance(actor: CharacterPF2e, effectUUID: ItemUUID) {\r\n    const effects = getEffects(actor)\r\n    const already = effects.findIndex(effect => effect.uuid === effectUUID)\r\n\r\n    let create = false\r\n\r\n    if (already < 0) {\r\n        create = true\r\n    } else if (effects.length) {\r\n        const other = effects.filter(effect => effect.uuid !== effectUUID).length\r\n        const more = effects.filter(effect => effect.uuid === effectUUID).length > 1\r\n        if (other || more) effects.splice(already, 1)\r\n    }\r\n\r\n    if (effects.length) {\r\n        await actor.deleteEmbeddedDocuments(\r\n            'Item',\r\n            effects.map(x => x.id)\r\n        )\r\n    }\r\n\r\n    if (create) addStance(actor, effectUUID)\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\nimport { getSettingLocalizationPath } from '@utils/foundry/path'\r\n\r\nexport function getSetting<T extends any>(key: string) {\r\n    return game.settings.get(MODULE_ID, key) as T\r\n}\r\n\r\nexport function setSetting(key: string, value: unknown) {\r\n    return game.settings.set(MODULE_ID, key, value)\r\n}\r\n\r\n/**\r\n * options.scope = 'world'\r\n *\r\n * options.config = false\r\n */\r\nexport function registerSetting<TChoices extends Record<string, unknown> | undefined>(\r\n    options: Omit<SettingRegistration<TChoices>, 'choices'> & { choices?: string[] | Record<string, unknown>; name: string }\r\n) {\r\n    const name = options.name\r\n    options.scope = options.scope ?? 'world'\r\n    options.config = options.config ?? false\r\n    if (options.config) {\r\n        options.name = getSettingLocalizationPath(name, 'name')\r\n        options.hint = getSettingLocalizationPath(name, 'hint')\r\n    }\r\n    if (Array.isArray(options.choices)) {\r\n        options.choices = options.choices.reduce((choices, choice) => {\r\n            choices[choice] = getSettingLocalizationPath(name, 'choices', choice)\r\n            return choices\r\n        }, {} as Record<string, unknown>)\r\n    }\r\n    game.settings.register<TChoices>(MODULE_ID, name, options as SettingRegistration<TChoices>)\r\n}\r\n\r\n/**\r\n * options.restricted = true\r\n *\r\n * options.icon = 'fas fa-cogs'\r\n */\r\nexport function registerSettingMenu(\r\n    options: RequiredBy<Partial<Omit<SettingSubmenuConfig, 'type'>>, 'name'> & { type: ConstructorOf<FormApplication> }\r\n) {\r\n    const name = options.name\r\n    options.name = getSettingLocalizationPath('menus', name, 'name')\r\n    options.label = getSettingLocalizationPath('menus', name, 'label')\r\n    options.hint = getSettingLocalizationPath('menus', name, 'hint')\r\n    options.restricted = options.restricted ?? true\r\n    options.icon = options.icon ?? 'fas fa-cogs'\r\n    game.settings.registerMenu(MODULE_ID, name, options as SettingSubmenuConfig)\r\n}\r\n\r\nexport function getCombatTrackerConfig() {\r\n    return game.settings.get('core', 'combatTrackerConfig') as { resource: string; skipDefeated: boolean }\r\n}\r\n","import { hasItemWithSourceId } from '@utils/foundry/item'\r\nimport { info } from '@utils/foundry/notification'\r\nimport { subLocalize } from '@utils/foundry/localize'\r\nimport { addStance, getEffects, getStances } from './stances'\r\n\r\nconst STANCE_SAVANT: ItemUUID[] = [\r\n    'Compendium.pf2e.feats-srd.Item.yeSyGnYDkl2GUNmu',\r\n    'Compendium.pf2e.feats-srd.Item.LI9VtCaL5ZRk0Wo8',\r\n]\r\n\r\nexport async function checkForSavant(actor: CharacterPF2e) {\r\n    if (!hasItemWithSourceId(actor, STANCE_SAVANT, ['feat'])) return\r\n    if (getEffects(actor).length) return\r\n\r\n    const stances = getStances(actor)\r\n    if (!stances.length) return\r\n\r\n    if (stances.length === 1) {\r\n        const stance = stances[0]!\r\n        if (await addStance(actor, stance.effectUUID)) info('useStance', { stance: stance.name })\r\n    } else {\r\n        openStancesMenu(actor, stances)\r\n    }\r\n}\r\n\r\nfunction openStancesMenu(actor: CharacterPF2e, stances: ReturnedStance[]) {\r\n    const localize = subLocalize('menu')\r\n    let content = `<h3>${localize('select')}</h3>`\r\n\r\n    for (let i = 0; i < stances.length; i++) {\r\n        const stance = stances[i]!\r\n        content += `<label style=\"height: 24px; display: block;\">`\r\n        content += `<input type=\"radio\" name=\"stance\" value=\"${stance.effectUUID}\"`\r\n        if (i === 0) content += ' checked'\r\n        content += ` style=\"margin-right: .5em;\"> <span>${stance.name}</span></label>`\r\n    }\r\n\r\n    content += '<div style=\"margin-bottom: .5em;\"></div>'\r\n\r\n    new Dialog({\r\n        title: localize('title'),\r\n        content,\r\n        buttons: {\r\n            yes: {\r\n                icon: '<i class=\"fa-solid fa-people-arrows\"></i>',\r\n                label: localize('accept'),\r\n                callback: html => addStance(actor, html.find('[name=stance]:checked')!.val() as ItemUUID),\r\n            },\r\n            no: {\r\n                icon: '<i class=\"fa-solid fa-xmark\"></i>',\r\n                label: localize('cancel'),\r\n            },\r\n        },\r\n    }).render(true)\r\n}\r\n","import { getSourceId, includesSourceId } from '@utils/foundry/flags'\r\n\r\ntype ActorItemTypes<A extends Actor> = (keyof A['itemTypes'])[]\r\n\r\nfunction getItemSourceIdCondition(sourceId: ItemUUID | ItemUUID[]) {\r\n    return Array.isArray(sourceId)\r\n        ? (item: Item) => includesSourceId(item, sourceId)\r\n        : (item: Item) => getSourceId(item) === sourceId\r\n}\r\n\r\nexport function getItems(actor: Actor, itemTypes?: ActorItemTypes<Actor>) {\r\n    return (itemTypes ? itemTypes.flatMap(type => actor.itemTypes[type as string]) : actor.items) as Embedded<Item>[]\r\n}\r\n\r\nexport function findItemWithSourceId<I extends Item>(actor: Actor, sourceId: ItemUUID, itemTypes?: ActorItemTypes<Actor>) {\r\n    return getItems(actor, itemTypes).find(getItemSourceIdCondition(sourceId)) as unknown as Embedded<I>\r\n}\r\n\r\nexport function hasItemWithSourceId<A extends Actor, I extends Item = CollectionValue<A['items']>>(\r\n    actor: A,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<A>\r\n) {\r\n    return getItems<A, I>(actor, itemTypes).some(getItemSourceIdCondition(sourceId))\r\n}\r\n\r\nexport function filterItemsWithSourceId<I extends Item>(\r\n    actor: Actor,\r\n    sourceId: ItemUUID | ItemUUID[],\r\n    itemTypes?: ActorItemTypes<Actor>\r\n) {\r\n    return getItems(actor, itemTypes).filter(getItemSourceIdCondition(sourceId)) as unknown as Embedded<I>[]\r\n}\r\n","import { localize } from '@utils/foundry/localize'\r\nimport { templatePath } from '@utils/foundry/path'\r\nimport { addStance, getEffects, getStances, toggleStance } from './stances'\r\n\r\nexport async function renderCharacterSheetPF2e(sheet: CharacterSheetPF2e, html: JQuery) {\r\n    const actor = sheet.actor\r\n    await addStances(actor, html)\r\n\r\n    html.find(\r\n        '.sheet-body .sheet-content [data-tab=actions] .tab-content .actions-panels [data-tab=encounter] .pf2e-stances .pf2e-stances__stance'\r\n    ).on('click', event => onToggleStance(event, actor))\r\n}\r\n\r\nexport function refreshCharacterSheets(actor: CharacterPF2e) {\r\n    for (const win of Object.values(ui.windows)) {\r\n        if (!(win instanceof ActorSheet)) continue\r\n        if (actor === win.actor) win.render()\r\n    }\r\n}\r\n\r\nasync function onToggleStance(event: JQuery.ClickEvent<any, any, HTMLElement>, actor: CharacterPF2e) {\r\n    const target = event.currentTarget\r\n    const canUseStances = target.closest('.pf2e-stances')?.classList.contains('can-use-stances')\r\n    if (!event.ctrlKey && !canUseStances) return\r\n    const effectUUID = target.dataset.effectUuid as ItemUUID\r\n    toggleStance(actor, effectUUID)\r\n}\r\n\r\nasync function addStances(actor: CharacterPF2e, html: JQuery) {\r\n    const stances = getStances(actor).sort((a, b) => a.name.localeCompare(b.name))\r\n    if (!stances.length) return\r\n\r\n    const inCombat = actor.getActiveTokens(true, true).some(token => token.inCombat)\r\n    const tab = html.find('.sheet-body .sheet-content [data-tab=actions] .tab-content .actions-panels [data-tab=encounter]')\r\n    const options = tab.find('.actions-options')\r\n    const template = await renderTemplate(templatePath('stances.hbs'), {\r\n        stances,\r\n        canUseStances: inCombat && !actor.isDead,\r\n        i18n: localize,\r\n    })\r\n\r\n    if (options.length) options.after(template)\r\n    else tab.prepend(template)\r\n}\r\n","import { setModuleID } from '@utils/module'\r\nimport { registerSetting } from '@utils/foundry/settings'\r\nimport { checkForSavant } from './savant'\r\nimport { refreshCharacterSheets, renderCharacterSheetPF2e } from './sheet'\r\nimport { getActionsUUIDS, getEffects, getStances, parseCustomStances, toggleStance } from './stances'\r\nimport { getCurrentModule } from '@utils/foundry/module'\r\n\r\nexport const MODULE_ID = 'pf2e-stances'\r\nsetModuleID(MODULE_ID)\r\n\r\nHooks.once('setup', () => {\r\n    registerSetting({\r\n        name: 'custom',\r\n        type: String,\r\n        default: '',\r\n        config: true,\r\n        onChange: parseCustomStances,\r\n    })\r\n})\r\n\r\nHooks.once('ready', () => {\r\n    parseCustomStances()\r\n\r\n    getCurrentModule<PF2eStancesApi>().api = {\r\n        getStances,\r\n        getActionsUUIDS,\r\n        toggleStance,\r\n    }\r\n})\r\n\r\nHooks.on('deleteCombatant', deleteCombatant)\r\nHooks.on('createCombatant', createCombatant)\r\nHooks.on('deleteCombat', deleteCombat)\r\n\r\nHooks.on('renderCharacterSheetPF2e', renderCharacterSheetPF2e)\r\n\r\nfunction deleteCombat(combat: Combat) {\r\n    for (const combatant of combat.combatants) {\r\n        deleteCombatant(combatant)\r\n    }\r\n}\r\n\r\nfunction deleteCombatant(combatant: Combatant) {\r\n    const actor = getActorFromCombatant(combatant)\r\n    if (!actor) return\r\n\r\n    if (game.user.isGM) {\r\n        const effects = getEffects(actor).map(effect => effect.id)\r\n        if (effects.length) actor.deleteEmbeddedDocuments('Item', effects)\r\n    }\r\n\r\n    refreshCharacterSheets(actor)\r\n}\r\n\r\nfunction createCombatant(combatant: Combatant) {\r\n    const actor = getActorFromCombatant(combatant)\r\n    if (!actor) return\r\n\r\n    if (!game.user.isGM && actor.isOwner) checkForSavant(actor)\r\n\r\n    refreshCharacterSheets(actor)\r\n}\r\n\r\nfunction getActorFromCombatant(combatant: Combatant) {\r\n    const actor = (combatant as CombatantPF2e).actor\r\n    if (!actor || actor.isToken || !actor.isOfType('character')) return\r\n    else return actor\r\n}\r\n","import { MODULE_ID } from '@utils/module'\r\n\r\ntype OwnModule = 'anonymous' | 'idleuh' | 'pf2e-hero-actions' | 'pf2e-dailies'\r\n\r\ntype ReturnedModule<TApi extends ModuleApi = ModuleApi> = Module<TApi> | undefined\r\ntype ReturnedModuleApi<TApi extends Record<string, any>> = Module<TApi>['api'] | undefined\r\n\r\nexport function getModule<T extends ModuleApi = ModuleApi>(id: string | OwnModule) {\r\n    return game.modules.get(id) as ReturnedModule<T>\r\n}\r\n\r\nexport function getCurrentModule<TApi extends ModuleApi = ModuleApi>() {\r\n    return getModule(MODULE_ID) as Module<TApi>\r\n}\r\n\r\nexport function getModuleApi<TApi extends Record<string, any>>(id: string | OwnModule) {\r\n    return getModule<TApi>(id)?.api as ReturnedModuleApi<TApi>\r\n}\r\n"],"names":["path","join","getSourceId","doc","getFlag","localize","args","key","data","game","i18n","format","subLocalize","subKey","fn","Object","defineProperties","warn","value","str","arg1","arg2","notify","enumerable","configurable","info","error","has","hasLocalization","localizePath","template","hash","arg3","type","undefined","permanent","ui","notifications","STANCES","feat","effect","action","replace","FEATS","Map","EFFECTS","Set","ACTIONS","getActionsUUIDS","parseCustomStances","clear","stance","set","add","setting","settings","get","trim","customs","JSON","parse","Array","isArray","length","err","console","getStances","actor","stances","replaced","effects","actions","itemTypes","sourceId","id","push","filter","includes","map","fromUuidSync","actionUUID","name","img","actionID","effectID","effectUUID","getEffects","uuid","async","addStance","fromUuid","obj","toObject","getProperty","setProperty","items","createEmbeddedDocuments","toMessage","toggleStance","already","findIndex","create","other","more","splice","deleteEmbeddedDocuments","x","STANCE_SAVANT","checkForSavant","flatMap","getItems","some","item","list","includesSourceId","getItemSourceIdCondition","hasItemWithSourceId","content","i","Dialog","title","buttons","yes","icon","label","callback","html","find","val","no","render","openStancesMenu","refreshCharacterSheets","win","values","windows","ActorSheet","deleteCombatant","combatant","getActorFromCombatant","user","isGM","isToken","isOfType","isSystem","setModuleID","Hooks","once","options","scope","config","hint","choices","reduce","choice","register","registerSetting","String","default","onChange","modules","api","on","isOwner","combat","combatants","sheet","sort","a","b","localeCompare","inCombat","getActiveTokens","token","tab","renderTemplate","templatePath","canUseStances","isDead","after","prepend","addStances","event","target","currentTarget","closest","classList","contains","ctrlKey","dataset","effectUuid","onToggleStance"],"sourceRoot":""}